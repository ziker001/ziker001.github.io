{"version":3,"sources":["../node_modules/reactstrap/es/ButtonDropdown.js","views/eshop/RTokenList/RTokenList.js","views/conponents/TransactionDialog/TransactionDialog.js"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","prop_types__WEBPACK_IMPORTED_MODULE_2__","prop_types__WEBPACK_IMPORTED_MODULE_2___default","_Dropdown__WEBPACK_IMPORTED_MODULE_3__","propTypes","children","a","node","ButtonDropdown","props","createElement","Object","group","__webpack_exports__","RTokenList","Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","dropdownOpen","page","channelName","list","channel","exchange","action","working","filterOptions","fee","amount","deadline","account","loadLocalAccount","secret","loadAll","setState","_this2","data","sign","pk","type","size","filterType","query","url","getShareHost","postSafe","ok","res","tid","_this3","senderpk","dealine","recipientPk","rtoken","recipientId","miner","doBShopTransaction","msg","dialogMsg","tranferOk","updateExchangeStatus","transactionId","bind","e","target","value","_this4","map","op","index","react_default","DropdownItem","onClick","setFilter","Modal","isOpen","toggle","toggleActionDialog","className","ModalHeader","ModalBody","FormGroup","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","id","rsId","onChange","updateAmount","updateFee","placeholder","updateDeadline","renderdialogMsg","ModalFooter","Button","color","renderPayBtn","doTransfer","Label","v","length","act","_this5","_this6","d","Date","setTime","time","btime","toLocaleString","tokenTime","resId","AccountDialog","downloader","ip","status","note","renderActionButtons","_this7","Card","CardBody","DropdownToggle","caret","DropdownMenu","renderFilterOptions","upateFilterValue","Table","hover","bordered","striped","responsive","renderExchangelist","renderActionDialog","Pagination","PaginationItem","PaginationLink","previous","tag","prePage","active","next","nextPage","Alert"],"mappings":"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","file":"static/js/12.84f2e9ab.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nvar propTypes = {\n  children: PropTypes.node\n};\n\nvar ButtonDropdown = function ButtonDropdown(props) {\n  return React.createElement(Dropdown, _extends({\n    group: true\n  }, props));\n};\n\nButtonDropdown.propTypes = propTypes;\nexport default ButtonDropdown;","import React, { Component } from 'react';\r\nimport { Badge, Card, CardBody, CardHeader, Col, Pagination, PaginationItem, PaginationLink, Row, Table } from 'reactstrap';\r\nimport { Button, Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\r\nimport { CardGroup, Container, Form, FormGroup, Fade, Alert, Label } from 'reactstrap'\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader, ButtonDropdown, DropdownItem, DropdownMenu, DropdownToggle } from 'reactstrap'\r\nimport { doExchange, doBShopTransaction } from '../eshop'\r\nimport AccountDialog from '../../conponents/AccountDialog/AccountDialog'\r\nimport { loadLocalAccount, getShareHost, postSafe, sign } from '../../ggv/js/gegeUtil'\r\nimport TransactionDialog from '../../conponents/TransactionDialog/TransactionDialog'\r\nimport { stringify } from 'querystring';\r\nclass RTokenList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { dropdownOpen: false, page: 1, channelName: '选择过滤类型', list: [], channel: -1, exchange: null, action: false, working: false }\r\n    this.filterOptions = ['资源ID', '下载账户', '流量矿工账户']\r\n    this.fee = '0.01'\r\n    this.amount = '0.1'\r\n    this.deadline = '5'\r\n  }\r\n\r\n  componentDidMount() {\r\n    let account = loadLocalAccount();\r\n    if (account && account.secret) {\r\n      this.secret = account.secret;\r\n      this.account = account;\r\n    }\r\n    this.loadAll()\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      dropdownOpen: !this.state.dropdownOpen\r\n    })\r\n  }\r\n\r\n  loadAll() {\r\n    let token = sign(this.account.secret, this.account.pk)\r\n    let data = { action: 'rtoken', type: 'list', page: this.state.page, size: 20, filterType: this.state.channel, query: this.state.query }\r\n    let url = getShareHost() + \"/bshop\"\r\n    postSafe(url, data, (ok, res) => {\r\n      if (ok && res && res.list) {\r\n        let list = res.list\r\n        this.setState({ list })\r\n      }\r\n    })\r\n  }\r\n\r\n  updateExchangeStatus(tid) {\r\n\r\n  }\r\n\r\n  doTransfer() {\r\n    let senderpk = this.account.pk\r\n    let data = {\r\n      action: 'transaction', type: 'transfer', amount: this.amount,\r\n      fee: this.fee, dealine: this.deadline, pk: senderpk, recipientPk: this.state.rtoken.pk,\r\n      recipientId: this.state.rtoken.miner\r\n    };\r\n    this.setState({ working: true })\r\n    doBShopTransaction(this.secret, data, ((ok, msg) => {\r\n      if (ok && msg.ok) {\r\n        this.setState({ dialogMsg: '(成功),等待机器人验证', tranferOk: true })\r\n        this.updateExchangeStatus(msg.transactionId);\r\n      } else {\r\n        this.setState({ dialogMsg: '(失败)' })\r\n      }\r\n    }).bind(this))\r\n  }\r\n\r\n\r\n  upateFilterValue(e) {\r\n    if (e && e.target) {\r\n      let value = e.target.value;\r\n      this.setState({ query: value })\r\n    }\r\n  }\r\n\r\n  prePage() {\r\n    this.state.page--\r\n    this.loadAll()\r\n  }\r\n\r\n  nextPage() {\r\n    this.state.page++\r\n    this.loadAll()\r\n  }\r\n\r\n  setFilter(channel) {\r\n    this.setState({ channel: channel, channelName: this.filterOptions[channel] })\r\n  }\r\n\r\n  renderFilterOptions() {\r\n    let ops = this.filterOptions.map((op, index) => {\r\n      return (<DropdownItem onClick={(e) => {\r\n        this.setFilter(index)\r\n      }}>{op}</DropdownItem>)\r\n    })\r\n    return ops;\r\n  }\r\n\r\n  toggleActionDialog() {\r\n    this.setState({ action: !this.state.action, dialogMsg: '', tranferOk: false })\r\n  }\r\n\r\n  renderActionDialog() {\r\n    if (!this.state.rtoken)\r\n      return null;\r\n    return (<Modal isOpen={this.state.action} toggle={this.toggleActionDialog.bind(this)}\r\n      className={'modal-info ' + this.props.className}>\r\n      <ModalHeader toggle={this.toggleActionDialog.bind(this)}>奖励流量矿工</ModalHeader>\r\n      <ModalBody>\r\n        <FormGroup>\r\n          <div className=\"controls\">\r\n            <InputGroup className=\"input-prepend\">\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <InputGroupText>我的账户:</InputGroupText>\r\n              </InputGroupAddon>\r\n              <Input id=\"appendedPrependedInput\" size=\"16\" type=\"text\" value={this.account.rsId} />\r\n            </InputGroup>\r\n          </div>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <div className=\"controls\">\r\n            <InputGroup className=\"input-prepend\">\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <InputGroupText>矿工ID:</InputGroupText>\r\n              </InputGroupAddon>\r\n              <Input id=\"appendedPrependedInput\" size=\"16\" type=\"text\" value={this.state.rtoken.miner} />\r\n            </InputGroup>\r\n          </div>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <div className=\"controls\">\r\n            <InputGroup className=\"input-prepend\">\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <InputGroupText>矿工公钥:</InputGroupText>\r\n              </InputGroupAddon>\r\n              <Input id=\"appendedPrependedInput\" size=\"16\" type=\"text\" value={this.state.rtoken.pk} />\r\n            </InputGroup>\r\n          </div>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <div className=\"controls\">\r\n            <InputGroup className=\"input-prepend\">\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <InputGroupText>积分数量:</InputGroupText>\r\n              </InputGroupAddon>\r\n              <Input id=\"appendedPrependedInput\" size=\"16\" type=\"text\" onChange={this.updateAmount.bind(this)} />\r\n            </InputGroup>\r\n          </div>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <div className=\"controls\">\r\n            <InputGroup className=\"input-prepend\">\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <InputGroupText>机器人费:</InputGroupText>\r\n              </InputGroupAddon>\r\n              <Input id=\"appendedPrependedInput\" size=\"16\" type=\"text\" onChange={this.updateFee.bind(this)} placeholder='机器人费，最少0.01积分' />\r\n            </InputGroup>\r\n          </div>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <div className=\"controls\">\r\n            <InputGroup className=\"input-prepend\">\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <InputGroupText>有效期:</InputGroupText>\r\n              </InputGroupAddon>\r\n              <Input id=\"appendedPrependedInput\" size=\"16\" onChange={this.updateDeadline.bind(this)} type=\"text\" placeholder='交易有效期，默认5分钟' />\r\n              <InputGroupAddon addonType=\"append\">\r\n                <InputGroupText>分钟</InputGroupText>\r\n              </InputGroupAddon>\r\n            </InputGroup>\r\n          </div>\r\n        </FormGroup>\r\n        {this.renderdialogMsg()}\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button color=\"danger\" onClick={this.toggleActionDialog.bind(this)}>取消</Button>\r\n        {this.renderPayBtn()}\r\n      </ModalFooter>\r\n    </Modal>)\r\n  }\r\n\r\n  renderPayBtn() {\r\n    if (this.state.tranferOk || this.state.working)\r\n      return null;\r\n    return (<Button color=\"danger\" onClick={this.doTransfer.bind(this)}>发送积分</Button>)\r\n  }\r\n\r\n  renderdialogMsg() {\r\n    if (this.state.dialogMsg) {\r\n      return (<Label>{this.state.dialogMsg}</Label>)\r\n    }\r\n    return null;\r\n  }\r\n\r\n  updateAmount(e) {\r\n    if (e && e.target) {\r\n      let v = e.target.value;\r\n      if (v && v.length > 0)\r\n        this.amount = v;\r\n    }\r\n  }\r\n\r\n  updateFee(e) {\r\n    if (e && e.target) {\r\n      let v = e.target.value;\r\n      if (v && v.length > 0)\r\n        this.fee = v;\r\n    }\r\n  }\r\n  updateDeadline(e) {\r\n    if (e && e.target) {\r\n      let act = e.target.value;\r\n      this.deadline = act;\r\n    }\r\n  }\r\n\r\n  renderActionButtons(res) {\r\n    return (<td><Button size='sm' onClick={((e) => {\r\n      this.setState({ rtoken: res })\r\n      this.toggleActionDialog()\r\n    }).bind(this)}>奖励矿工</Button></td>)\r\n  }\r\n\r\n  renderExchangelist() {\r\n    let list = this.state.list;\r\n    if (!list)\r\n      return null;\r\n    let content = list.map((res) => {\r\n      let d = new Date();\r\n      d.setTime(res.time)\r\n      let btime = d.toLocaleString()\r\n      //\r\n      d.setTime(res.tokenTime)\r\n      let tokenTime = d.toLocaleString()\r\n      let id = res.id;\r\n      return (<tr>\r\n        <td>{id}</td>\r\n        <td>{btime}</td>\r\n        <td>{tokenTime}</td>\r\n        <td>{res.resId} </td>\r\n        <td><AccountDialog rsId={res.miner} /></td>\r\n        <td><AccountDialog rsId={res.downloader} /></td>\r\n        <td>{res.ip}</td>\r\n        <td>{res.status}</td>\r\n        <td>{res.note}</td>\r\n        {\r\n          this.renderActionButtons(res)\r\n        }\r\n      </tr>)\r\n    });\r\n    return content;\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardBody>\r\n          <Button color=\"primary\" onClick={(e) => this.loadAll()}>\r\n            <i className=\"fa fa-search\"></i>显示全部\r\n                </Button>\r\n          <InputGroup>\r\n            <ButtonDropdown isOpen={this.state.dropdownOpen} toggle={() => { this.toggle(); }}>\r\n              <DropdownToggle caret>\r\n                {this.state.channelName}\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                {this.renderFilterOptions()}\r\n              </DropdownMenu>\r\n            </ButtonDropdown>\r\n            <Input placeholder='输入搜索参数' onChange={this.upateFilterValue.bind(this)} />\r\n            <Button color=\"primary\" onClick={(e) => this.loadAll()}>\r\n              <i className=\"fa fa-search\"></i>&nbsp;\r\n                </Button>\r\n          </InputGroup>\r\n          <Table hover bordered striped responsive size=\"sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>上传时间</th>\r\n                <th>Token时间</th>\r\n                <th>资源ID</th>\r\n                <th>流量矿工</th>\r\n                <th>下载账户</th>\r\n                <th>Ip地址</th>\r\n                <th>状态</th>\r\n                <th>备注</th>\r\n                <th>操作</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.renderExchangelist()}\r\n              {this.renderActionDialog()}\r\n            </tbody>\r\n          </Table>\r\n          <nav>\r\n            <Pagination>\r\n              <PaginationItem><PaginationLink previous tag=\"button\" onClick={(e) => { this.prePage() }}>Prev(上一页</PaginationLink></PaginationItem>\r\n              <PaginationItem active>\r\n                <PaginationLink tag=\"button\">{this.state.page}</PaginationLink>\r\n              </PaginationItem>\r\n              <PaginationItem><PaginationLink next tag=\"button\" onClick={(e) => { this.nextPage() }}>Next(下一页</PaginationLink></PaginationItem>\r\n            </Pagination>\r\n          </nav>\r\n          <Alert color=\"danger\"><small>账户金额大于100的账户才有权限查看用户确认信息列表.</small></Alert>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RTokenList;\r\n","import React, { Component } from 'react';\r\nimport { Button, Alert, CardBody, CardHeader, Popover, PopoverBody, PopoverHeader } from 'reactstrap';\r\nimport { loadTransactionInfo, loadBlockTransaction } from '../../eshop/eshop.js'\r\nimport classnames from 'classnames';\r\nimport { Nav, NavItem, NavLink, Table, Badge, Label } from 'reactstrap'\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Pagination, PaginationItem, PaginationLink, } from 'reactstrap'\r\nimport AccountDialog from '../AccountDialog/AccountDialog.js';\r\nimport TransactionType from '../../conponents/TransactionType/TransactionType'\r\n\r\nclass TransactionDialog extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = ({ blockInfo: null, danger: false, transPage: 1 })\r\n  }\r\n\r\n  toggleDanger() {\r\n    if (!this.state.danger) {\r\n      setTimeout((() => {\r\n        this.loadTransactionInfo(this.props.tid);\r\n      }).bind(this), 1000);\r\n    }\r\n    this.setState({\r\n      danger: !this.state.danger,\r\n    });\r\n  }\r\n\r\n  loadTransactionInfo(height) {\r\n    loadTransactionInfo(height, ((ok, tInfo) => {\r\n      if (ok && tInfo.exist)\r\n        this.setState({ tInfo :tInfo.t  })\r\n    }).bind(this))\r\n  }\r\n  rederBlockInfoDialog() {\r\n    if (!this.state.tInfo)\r\n      return null;\r\n      let {tInfo } = this.state;\r\n      let d = new Date();\r\n      d.setTime(tInfo.time)\r\n      let btime = d.toLocaleString()\r\n    return (<Modal isOpen={this.state.danger} toggle={this.toggleDanger.bind(this)}\r\n      className={'modal-info ' + this.props.className}>\r\n      <ModalHeader toggle={this.toggleDanger.bind(this)}>交易明细</ModalHeader>\r\n      <ModalBody>\r\n      <p><TransactionType type={(tInfo.type)} id={tInfo.id} /></p>\r\n        <p>发起方:<AccountDialog rsId={tInfo.from} /></p>\r\n        <p>接收方:<AccountDialog rsId={tInfo.to} /></p>\r\n        <p>金额{tInfo.amount} 积分</p>\r\n        <p>手续费{tInfo.fee} 积分</p>\r\n        <p>高度:{tInfo.height}</p>\r\n        <p>时间:{btime}</p>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button color=\"danger\" onClick={this.toggleDanger.bind(this)}>OK</Button>\r\n      </ModalFooter>\r\n    </Modal>)\r\n  }\r\n\r\n  render() {\r\n    let id = 'bd-' + this.props.tid;\r\n    return (<span>\r\n      <span className='alert-primary  fade show' id={id} onClick={this.toggleDanger.bind(this)}>\r\n        {this.props.tid}\r\n      </span>\r\n      {this.rederBlockInfoDialog()}\r\n    </span>)\r\n  }\r\n}\r\n\r\nexport default TransactionDialog;"],"sourceRoot":""}