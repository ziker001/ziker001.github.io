{"version":3,"sources":["../node_modules/reactstrap/es/ButtonDropdown.js","views/ggv/BlockList/BlockList.js"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","prop_types__WEBPACK_IMPORTED_MODULE_2__","prop_types__WEBPACK_IMPORTED_MODULE_2___default","_Dropdown__WEBPACK_IMPORTED_MODULE_3__","propTypes","children","a","node","ButtonDropdown","props","createElement","Object","group","__webpack_exports__","get","require","BlockList","_this","E_working_dir_flycat_flycat_portal_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","E_working_dir_flycat_flycat_portal_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","E_working_dir_flycat_flycat_portal_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","page","state","accountInfo","list","dropdownOpen","Array","fill","filterOption","filterIdx","filterValue","danger","showAccount","blockInfo","filterOptions","filterMsg","loadLoadBlockList","url","getShareHost","concat","err","res","data","JSON","parse","setState","e","bind","height","toggleDanger","ok","map","d","Date","setTime","time","btime","toLocaleString","react__WEBPACK_IMPORTED_MODULE_5___default","_conponents_BlockDialog_BlockDialog__WEBPACK_IMPORTED_MODULE_27__","_conponents_AccountDialog__WEBPACK_IMPORTED_MODULE_26__","rsId","generatorId","amount","fee","transactions","getTransactionName","type","from","to","reactstrap__WEBPACK_IMPORTED_MODULE_6__","hover","bordered","striped","responsive","size","renderAccountTransactionItem","reactstrap__WEBPACK_IMPORTED_MODULE_17__","isOpen","toggle","toggleAccount","className","reactstrap__WEBPACK_IMPORTED_MODULE_18__","reactstrap__WEBPACK_IMPORTED_MODULE_19__","pk","balance","renderAccountTransactions","reactstrap__WEBPACK_IMPORTED_MODULE_20__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","color","onClick","i","newArray","element","index","idx","target","value","_this2","op","reactstrap__WEBPACK_IMPORTED_MODULE_21__","setFilter","block","id","renderBlockTransactions","_this3","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_22__","reactstrap__WEBPACK_IMPORTED_MODULE_23__","caret","reactstrap__WEBPACK_IMPORTED_MODULE_24__","renderFilterOptions","reactstrap__WEBPACK_IMPORTED_MODULE_16__","placeholder","onChange","upateFilterValue","filterBlocks","rederBlockInfoDialog","renderBlockList","rederAccountInfoDialog","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","previous","tag","prePage","active","next","nextPage","renderTransactionItem","renderList","Component"],"mappings":"2FAAA,IAAAA,EAAAC,EAAA,GAAAC,EAAAD,EAAA,GAAAE,EAAAF,EAAAG,EAAAF,GAAAG,EAAAJ,EAAA,GAAAK,EAAAL,EAAAG,EAAAC,GAAAE,EAAAN,EAAA,KAIAO,EAAA,CACAC,SAAYH,EAAAI,EAASC,MAGrBC,EAAA,SAAAC,GACA,OAASV,EAAAO,EAAKI,cAAeP,EAAA,EAAUQ,OAAAf,EAAA,EAAAe,CAAQ,CAC/CC,OAAA,GACGH,KAGHD,EAAAJ,YACeS,EAAA,wSCPTC,EAAMC,EAAQ,IACdC,cAEJ,SAAAA,EAAYP,GAAO,IAAAQ,EAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAQ,KAAAH,IACjBC,EAAAN,OAAAS,EAAA,EAAAT,CAAAQ,KAAAR,OAAAU,EAAA,EAAAV,CAAAK,GAAAM,KAAAH,KAAMV,KACDc,KAAO,EACZN,EAAKO,MAAQ,CACXC,YAAa,KAAMC,KAAM,GAAIC,aAAc,IAAIC,MAAM,GAAGC,MAAK,GAAQC,aAAc,GACnFC,UAAW,EAAGC,YAAa,GAAIT,KAAM,EAAGU,QAAQ,EAAOC,aAAa,EAAOC,UAAW,MAExFlB,EAAKmB,cAAgB,CAAC,iBAAQ,uBAAS,iBAAQ,uBAAS,kBACxDnB,EAAKoB,UAAY,CAAC,GAAI,yCAAY,+CAAa,+CAAa,0CAR3CpB,mFAYjBE,KAAKmB,kBAAkB,EAAGnB,KAAKK,MAAMO,qDAGrBR,EAAMQ,EAAWC,GACjC,IAAIO,EAAKC,yBAAiB,8BAAgCjB,EAAO,cAAgBQ,EAAY,gBAAkBC,EAE/GlB,EAAI2B,OAAOF,EAAM,SAAUG,EAAKC,EAAKC,GACnC,IAAIF,EAIJ,IACE,IAAIhB,EAAOmB,KAAKC,MAAMF,GACtBzB,KAAK4B,SAAS,CAAErB,SAChB,MAAOsB,MAERC,KAAK9B,yCAIJA,KAAKK,MAAMD,KAAO,IACpBJ,KAAKK,MAAMD,OACXJ,KAAKmB,kBAAkBnB,KAAKK,MAAMD,KAAMJ,KAAKK,MAAMO,UAAWZ,KAAKK,MAAMQ,qDAK3Eb,KAAK4B,SAAS,CACZd,QAASd,KAAKK,MAAMS,+CAIViB,GACZ/B,KAAKgC,eACL,IAAIZ,EAAKC,yBAAiB,4BAA8BU,EACxDpC,EAAI2B,OAAOF,EAAM,SAAUG,EAAKC,EAAKC,GACnC,IAAIF,EAAJ,CAIA,IAAIP,EAAYU,KAAKC,MAAMF,GACvBT,EAAUiB,IACZjC,KAAK4B,SAAS,CAAEZ,gBACjBc,KAAK9B,0CAIRA,KAAKK,MAAMD,OACXJ,KAAKmB,kBAAkBnB,KAAKK,MAAMD,KAAMJ,KAAKK,MAAMO,UAAWZ,KAAKK,MAAMQ,oDAIzEb,KAAKmB,kBAAkBnB,KAAKK,MAAMD,KAAMJ,KAAKK,MAAMO,UAAWZ,KAAKK,MAAMQ,uDAIzE,IAAIN,EAAOP,KAAKK,MAAME,KACtB,OAAKA,EAESA,EAAK2B,IAAI,SAACV,GACtB,IAAIW,EAAI,IAAIC,KACZD,EAAEE,QAAQb,EAAIc,MACd,IAAIC,EAAQJ,EAAEK,iBACd,OAAQC,EAAAtD,EAAAI,cAAA,UACNkD,EAAAtD,EAAAI,cAAA,UAAIkD,EAAAtD,EAAAI,cAACmD,EAAA,EAAD,CAAaX,OAAQP,EAAIO,UAC7BU,EAAAtD,EAAAI,cAAA,UAAIkD,EAAAtD,EAAAI,cAACoD,EAAA,EAAD,CAAeC,KAAMpB,EAAIqB,eAC7BJ,EAAAtD,EAAAI,cAAA,UAAKiC,EAAIsB,OAAT,iBACAL,EAAAtD,EAAAI,cAAA,UAAKiC,EAAIuB,IAAT,iBACAN,EAAAtD,EAAAI,cAAA,UAAKgD,MAVA,4DA6BT,OAXcvC,KAAKK,MAAMC,YAAY0C,aAAad,IAAI,SAACV,GACrD,OAAQiB,EAAAtD,EAAAI,cAAA,UACNkD,EAAAtD,EAAAI,cAAA,UAAK0D,6BAAmBzB,EAAI0B,OAC5BT,EAAAtD,EAAAI,cAAA,UAAKiC,EAAI2B,MACTV,EAAAtD,EAAAI,cAAA,UAAKiC,EAAI4B,IACTX,EAAAtD,EAAAI,cAAA,UAAKiC,EAAIsB,OAAT,iBACAL,EAAAtD,EAAAI,cAAA,UAAKiC,EAAIuB,IAAT,iBACAN,EAAAtD,EAAAI,cAAA,UAAKiC,EAAIO,+DAQb,OAAI/B,KAAKK,MAAMC,YAAY0C,aACjBP,EAAAtD,EAAAI,cAAC8D,EAAA,EAAD,CAAOC,OAAK,EAACC,UAAQ,EAACC,SAAO,EAACC,YAAU,EAACC,KAAK,MACpDjB,EAAAtD,EAAAI,cAAA,aACEkD,EAAAtD,EAAAI,cAAA,UACEkD,EAAAtD,EAAAI,cAAA,sCACAkD,EAAAtD,EAAAI,cAAA,sCACAkD,EAAAtD,EAAAI,cAAA,sCACAkD,EAAAtD,EAAAI,cAAA,0BACAkD,EAAAtD,EAAAI,cAAA,gCACAkD,EAAAtD,EAAAI,cAAA,wCAGJkD,EAAAtD,EAAAI,cAAA,aACGS,KAAK2D,iCAIH,sDAKT,OAAK3D,KAAKK,MAAMC,YAERmC,EAAAtD,EAAAI,cAACqE,EAAA,EAAD,CAAOC,OAAQ7D,KAAKK,MAAMU,YAAa+C,OAAQ9D,KAAK+D,cAAcjC,KAAK9B,MAC7EgE,UAAW,cAAgBhE,KAAKV,MAAM0E,WACtCvB,EAAAtD,EAAAI,cAAC0E,EAAA,EAAD,CAAaH,OAAQ9D,KAAK+D,cAAcjC,KAAK9B,OAA7C,4BACAyC,EAAAtD,EAAAI,cAAC2E,EAAA,EAAD,KACEzB,EAAAtD,EAAAI,cAAA,4BAAUS,KAAKK,MAAMC,YAAYsC,MACjCH,EAAAtD,EAAAI,cAAA,sCAAUS,KAAKK,MAAMC,YAAY6D,IACjC1B,EAAAtD,EAAAI,cAAA,sCAAUS,KAAKK,MAAMC,YAAY8D,SACjC3B,EAAAtD,EAAAI,cAAA,sCACCS,KAAKqE,6BAER5B,EAAAtD,EAAAI,cAAC+E,EAAA,EAAD,KACE7B,EAAAtD,EAAAI,cAACgF,EAAA,EAAD,CAAQC,MAAM,SAASC,QAASzE,KAAK+D,cAAcjC,KAAK9B,OAAxD,QAZK,6CAkBTA,KAAK4B,SAAS,CACZb,aAAcf,KAAKK,MAAMU,sDAIb6B,GACd5C,KAAK+D,gBACL,IAAI3C,EAAKC,yBAAiB,mCAAqCuB,EAC/DjD,EAAI2B,OAAOF,EAAM,SAAUG,EAAKC,EAAKC,GACnC,IAAIF,EAAJ,CAIA,IAAIjB,EAAcoB,KAAKC,MAAMF,GAC7BzB,KAAK4B,SAAS,CAAEtB,kBACfwB,KAAK9B,sCAIH0E,GACL,IAAMC,EAAW3E,KAAKK,MAAMG,aAAa0B,IAAI,SAAC0C,EAASC,GAAY,OAAQA,IAAUH,IAAKE,IAC1F5E,KAAK4B,SAAS,CACZpB,aAAcmE,sCAIRG,GACR9E,KAAK4B,SAAS,CAAExB,KAAM,EAAGQ,UAAWkE,EAAKnE,aAAcX,KAAKkB,UAAU4D,8CAIvDjD,GACf,GAAIA,GAAKA,EAAEkD,OAAQ,CACjB,IAAIC,EAAQnD,EAAEkD,OAAOC,MACrBhF,KAAK4B,SAAS,CAAEf,YAAamE,mDAIX,IAAAC,EAAAjF,KAMpB,OALUA,KAAKiB,cAAciB,IAAI,SAACgD,EAAIL,GACpC,OAAQpC,EAAAtD,EAAAI,cAAC4F,EAAA,EAAD,CAAcV,QAAS,SAAC5C,GAC9BoD,EAAKG,UAAUP,KACbK,oDAMN,OAAKlF,KAAKK,MAAMW,UAERyB,EAAAtD,EAAAI,cAACqE,EAAA,EAAD,CAAOC,OAAQ7D,KAAKK,MAAMS,OAAQgD,OAAQ9D,KAAKgC,aAAaF,KAAK9B,MACvEgE,UAAW,cAAgBhE,KAAKV,MAAM0E,WACtCvB,EAAAtD,EAAAI,cAAC0E,EAAA,EAAD,CAAaH,OAAQ9D,KAAKgC,aAAaF,KAAK9B,OAA5C,wCACAyC,EAAAtD,EAAAI,cAAC2E,EAAA,EAAD,KACEzB,EAAAtD,EAAAI,cAAA,4BAAUS,KAAKK,MAAMW,UAAUqE,MAAMC,IACrC7C,EAAAtD,EAAAI,cAAA,sCAAUS,KAAKK,MAAMW,UAAUqE,MAAMtD,QACrCU,EAAAtD,EAAAI,cAAA,sCACCS,KAAKuF,2BAER9C,EAAAtD,EAAAI,cAAC+E,EAAA,EAAD,KACE7B,EAAAtD,EAAAI,cAACgF,EAAA,EAAD,CAAQC,MAAM,SAASC,QAASzE,KAAKgC,aAAaF,KAAK9B,OAAvD,QAXK,0CAgBE,IAAAwF,EAAAxF,KAEX,OADWA,KAAKK,MAAME,KAGdkC,EAAAtD,EAAAI,cAACkG,EAAA,EAAD,KACNhD,EAAAtD,EAAAI,cAACmG,EAAA,EAAD,KACEjD,EAAAtD,EAAAI,cAACoG,EAAA,EAAD,KACElD,EAAAtD,EAAAI,cAACqG,EAAA,EAAD,KACEnD,EAAAtD,EAAAI,cAACsG,EAAA,EAAD,KACEpD,EAAAtD,EAAAI,cAACuG,EAAA,EAAD,CAAgBjC,OAAQ7D,KAAKK,MAAMG,aAAa,GAAIsD,OAAQ,WAAQ0B,EAAK1B,OAAO,KAC9ErB,EAAAtD,EAAAI,cAACwG,EAAA,EAAD,CAAgBC,OAAK,GAArB,kBAGAvD,EAAAtD,EAAAI,cAAC0G,EAAA,EAAD,KACGjG,KAAKkG,wBAGVzD,EAAAtD,EAAAI,cAAC4G,EAAA,EAAD,CAAOC,YAAapG,KAAKK,MAAMM,aAAc0F,SAAUrG,KAAKsG,iBAAiBxE,KAAK9B,QAClFyC,EAAAtD,EAAAI,cAACgF,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAS,SAAC5C,GAAD,OAAO2D,EAAKe,iBAC3C9D,EAAAtD,EAAAI,cAAA,KAAGyE,UAAU,iBADf,SAIDhE,KAAKwG,uBACN/D,EAAAtD,EAAAI,cAAC8D,EAAA,EAAD,CAAOC,OAAK,EAACC,UAAQ,EAACC,SAAO,EAACC,YAAU,EAACC,KAAK,MAC5CjB,EAAAtD,EAAAI,cAAA,aACEkD,EAAAtD,EAAAI,cAAA,UACEkD,EAAAtD,EAAAI,cAAA,sCACAkD,EAAAtD,EAAAI,cAAA,gCACAkD,EAAAtD,EAAAI,cAAA,0BACAkD,EAAAtD,EAAAI,cAAA,gCACAkD,EAAAtD,EAAAI,cAAA,4BAGJkD,EAAAtD,EAAAI,cAAA,aACGS,KAAKyG,kBACLzG,KAAK0G,2BAGVjE,EAAAtD,EAAAI,cAAA,WACEkD,EAAAtD,EAAAI,cAACoH,EAAA,EAAD,KACElE,EAAAtD,EAAAI,cAACqH,EAAA,EAAD,KAAgBnE,EAAAtD,EAAAI,cAACsH,EAAA,EAAD,CAAgBC,UAAQ,EAACC,IAAI,SAAStC,QAAS,SAAC5C,GAAQ2D,EAAKwB,YAA7D,uBAChBvE,EAAAtD,EAAAI,cAACqH,EAAA,EAAD,CAAgBK,QAAM,GACpBxE,EAAAtD,EAAAI,cAACsH,EAAA,EAAD,CAAgBE,IAAI,UAAU/G,KAAKK,MAAMD,OAE3CqC,EAAAtD,EAAAI,cAACqH,EAAA,EAAD,KAAgBnE,EAAAtD,EAAAI,cAACsH,EAAA,EAAD,CAAgBK,MAAI,EAACH,IAAI,SAAStC,QAAS,SAAC5C,GAAQ2D,EAAK2B,aAAzD,6BAzCnB,qDA8DT,OAXcnH,KAAKK,MAAMW,UAAUgC,aAAad,IAAI,SAACV,GACnD,OAAQiB,EAAAtD,EAAAI,cAAA,UACNkD,EAAAtD,EAAAI,cAAA,UAAK0D,6BAAmBzB,EAAI0B,OAC5BT,EAAAtD,EAAAI,cAAA,UAAKiC,EAAI2B,MACTV,EAAAtD,EAAAI,cAAA,UAAKiC,EAAI4B,IACTX,EAAAtD,EAAAI,cAAA,UAAKiC,EAAIsB,OAAT,iBACAL,EAAAtD,EAAAI,cAAA,UAAKiC,EAAIuB,IAAT,iBACAN,EAAAtD,EAAAI,cAAA,UAAKiC,EAAIO,6DAQb,OAAI/B,KAAKK,MAAMW,UAAUgC,aACfP,EAAAtD,EAAAI,cAAC8D,EAAA,EAAD,CAAOC,OAAK,EAACC,UAAQ,EAACC,SAAO,EAACC,YAAU,EAACC,KAAK,MACpDjB,EAAAtD,EAAAI,cAAA,aACEkD,EAAAtD,EAAAI,cAAA,UACEkD,EAAAtD,EAAAI,cAAA,sCACAkD,EAAAtD,EAAAI,cAAA,sCACAkD,EAAAtD,EAAAI,cAAA,sCACAkD,EAAAtD,EAAAI,cAAA,0BACAkD,EAAAtD,EAAAI,cAAA,gCACAkD,EAAAtD,EAAAI,cAAA,wCAGJkD,EAAAtD,EAAAI,cAAA,aACGS,KAAKoH,0BAIH,sCAMT,OACE3E,EAAAtD,EAAAI,cAAA,OAAKyE,UAAU,mBACZhE,KAAKqH,qBAjTUC,aAwTTzH","file":"static/js/13.0ccf5b12.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nvar propTypes = {\n  children: PropTypes.node\n};\n\nvar ButtonDropdown = function ButtonDropdown(props) {\n  return React.createElement(Dropdown, _extends({\n    group: true\n  }, props));\n};\n\nButtonDropdown.propTypes = propTypes;\nexport default ButtonDropdown;","import React, { Component } from 'react';\r\nimport { Badge, Card, CardBody, CardHeader, Col, Pagination, PaginationItem, PaginationLink, Row, Table } from 'reactstrap';\r\nimport { Button, Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\r\nimport { CardGroup, Container, Form, FormGroup, Fade, Collapse, Label } from 'reactstrap'\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader, ButtonDropdown, DropdownItem, DropdownMenu, DropdownToggle } from 'reactstrap'\r\nimport { getTransactionName, getShareHost } from '../js/gegeUtil.js'\r\nimport AccountDialog from '../../conponents/AccountDialog'\r\nimport BlockDialog from '../../conponents/BlockDialog/BlockDialog'\r\nconst get = require('simple-get')\r\nclass BlockList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.page = 1;\r\n    this.state = {\r\n      accountInfo: null, list: [], dropdownOpen: new Array(2).fill(false), filterOption: '',\r\n      filterIdx: 0, filterValue: '', page: 1, danger: false, showAccount: false, blockInfo: null\r\n    }\r\n    this.filterOptions = ['(全部)', '(手续费)', '(金额)', '(机器人)', '(高度)']\r\n    this.filterMsg = ['', '(输入总手续费)', '(输入交易总金额)', '(输入机器人账号)', '(輸入區塊高度)']\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadLoadBlockList(1, this.state.filterIdx)\r\n  }\r\n\r\n  loadLoadBlockList(page, filterIdx, filterValue) {\r\n    let url =getShareHost() + '/btb?action=blockList&page=' + page + \"&filterIdx=\" + filterIdx + \"&filterValue=\" + filterValue;\r\n\r\n    get.concat(url, (function (err, res, data) {\r\n      if (err) {\r\n        //console.log(err);\r\n        return;\r\n      }\r\n      try {\r\n        let list = JSON.parse(data);\r\n        this.setState({ list })\r\n      } catch (e) {\r\n      }\r\n    }).bind(this))\r\n  }\r\n\r\n  prePage() {\r\n    if (this.state.page > 1) {\r\n      this.state.page--\r\n      this.loadLoadBlockList(this.state.page, this.state.filterIdx, this.state.filterValue)\r\n    }\r\n  }\r\n\r\n  toggleDanger() {\r\n    this.setState({\r\n      danger: !this.state.danger,\r\n    });\r\n  }\r\n\r\n  loadBlockInfo(height) {\r\n    this.toggleDanger()\r\n    let url =getShareHost() + '/btb?action=block&height=' + height;\r\n    get.concat(url, (function (err, res, data) {\r\n      if (err) {\r\n        // console.log(err);\r\n        return;\r\n      }\r\n      let blockInfo = JSON.parse(data);\r\n      if (blockInfo.ok)\r\n        this.setState({ blockInfo })\r\n    }).bind(this))\r\n  }\r\n\r\n  nextPage() {\r\n    this.state.page++\r\n    this.loadLoadBlockList(this.state.page, this.state.filterIdx, this.state.filterValue)\r\n  }\r\n\r\n  filterBlocks() {\r\n    this.loadLoadBlockList(this.state.page, this.state.filterIdx, this.state.filterValue)\r\n  }\r\n\r\n  renderBlockList() {\r\n    let list = this.state.list;\r\n    if (!list)\r\n      return null;\r\n    let content = list.map((res) => {\r\n      let d = new Date();\r\n      d.setTime(res.time)\r\n      let btime = d.toLocaleString()\r\n      return (<tr>\r\n        <td><BlockDialog height={res.height} /></td>\r\n        <td><AccountDialog rsId={res.generatorId} /></td>\r\n        <td>{res.amount} 积分</td>\r\n        <td>{res.fee} 积分</td>\r\n        <td>{btime}</td>\r\n      </tr>)\r\n    });\r\n\r\n    return content;\r\n  }\r\n\r\n  renderAccountTransactionItem() {\r\n    let content = this.state.accountInfo.transactions.map((res) => {\r\n      return (<tr>\r\n        <td>{getTransactionName(res.type)}</td>\r\n        <td>{res.from}</td>\r\n        <td>{res.to}</td>\r\n        <td>{res.amount} 积分</td>\r\n        <td>{res.fee} 积分</td>\r\n        <td>{res.height}</td>\r\n      </tr>)\r\n    });\r\n\r\n    return content;\r\n  }\r\n\r\n  renderAccountTransactions() {\r\n    if (this.state.accountInfo.transactions) {\r\n      return (<Table hover bordered striped responsive size=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th>交易类型</th>\r\n            <th>发起账户</th>\r\n            <th>接收账户</th>\r\n            <th>金额</th>\r\n            <th>手续费</th>\r\n            <th>区块高度</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.renderAccountTransactionItem()}\r\n        </tbody>\r\n      </Table>)\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  rederAccountInfoDialog() {\r\n    if (!this.state.accountInfo)\r\n      return null;\r\n    return (<Modal isOpen={this.state.showAccount} toggle={this.toggleAccount.bind(this)}\r\n      className={'modal-info ' + this.props.className}>\r\n      <ModalHeader toggle={this.toggleAccount.bind(this)}>账户明细</ModalHeader>\r\n      <ModalBody>\r\n        <p>账户ID: {this.state.accountInfo.rsId}</p>\r\n        <p>账户公钥: {this.state.accountInfo.pk}</p>\r\n        <p>账户余额: {this.state.accountInfo.balance}</p>\r\n        <p>交易列表:</p>\r\n        {this.renderAccountTransactions()}\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button color=\"danger\" onClick={this.toggleAccount.bind(this)}>OK</Button>\r\n      </ModalFooter>\r\n    </Modal>)\r\n  }\r\n\r\n  toggleAccount() {\r\n    this.setState({\r\n      showAccount: !this.state.showAccount,\r\n    });\r\n  }\r\n\r\n  showAccountInfo(rsId) {\r\n    this.toggleAccount();\r\n    let url =getShareHost() + '/btb?action=account&rsIdOrPkHex=' + rsId;\r\n    get.concat(url, (function (err, res, data) {\r\n      if (err) {\r\n        // console.log(err);\r\n        return;\r\n      }\r\n      let accountInfo = JSON.parse(data);\r\n      this.setState({ accountInfo })\r\n    }).bind(this))\r\n  }\r\n\r\n\r\n  toggle(i) {\r\n    const newArray = this.state.dropdownOpen.map((element, index) => { return (index === i ? !element : false); });\r\n    this.setState({\r\n      dropdownOpen: newArray,\r\n    });\r\n  }\r\n\r\n  setFilter(idx) {\r\n    this.setState({ page: 1, filterIdx: idx, filterOption: this.filterMsg[idx] })\r\n  }\r\n\r\n\r\n  upateFilterValue(e) {\r\n    if (e && e.target) {\r\n      let value = e.target.value;\r\n      this.setState({ filterValue: value })\r\n    }\r\n  }\r\n\r\n  renderFilterOptions() {\r\n    let ops = this.filterOptions.map((op, index) => {\r\n      return (<DropdownItem onClick={(e) => {\r\n        this.setFilter(index)\r\n      }}>{op}</DropdownItem>)\r\n    })\r\n    return ops;\r\n  }\r\n\r\n  rederBlockInfoDialog() {\r\n    if (!this.state.blockInfo)\r\n      return null;\r\n    return (<Modal isOpen={this.state.danger} toggle={this.toggleDanger.bind(this)}\r\n      className={'modal-info ' + this.props.className}>\r\n      <ModalHeader toggle={this.toggleDanger.bind(this)}>交易区块明细</ModalHeader>\r\n      <ModalBody>\r\n        <p>区块ID: {this.state.blockInfo.block.id}</p>\r\n        <p>区块高度: {this.state.blockInfo.block.height}</p>\r\n        <p>交易列表:</p>\r\n        {this.renderBlockTransactions()}\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button color=\"danger\" onClick={this.toggleDanger.bind(this)}>OK</Button>\r\n      </ModalFooter>\r\n    </Modal>)\r\n  }\r\n\r\n  renderList() {\r\n    let list = this.state.list;\r\n    if (!list)\r\n      return null;\r\n    return (<Row>\r\n      <Col>\r\n        <Card>\r\n          <CardBody>\r\n            <InputGroup>\r\n              <ButtonDropdown isOpen={this.state.dropdownOpen[1]} toggle={() => { this.toggle(1); }}>\r\n                <DropdownToggle caret>\r\n                  (过滤)\r\n                    </DropdownToggle>\r\n                <DropdownMenu>\r\n                  {this.renderFilterOptions()}\r\n                </DropdownMenu>\r\n              </ButtonDropdown>\r\n              <Input placeholder={this.state.filterOption} onChange={this.upateFilterValue.bind(this)} />\r\n              <Button color=\"primary\" onClick={(e) => this.filterBlocks()}>\r\n                <i className=\"fa fa-search\"></i>&nbsp;\r\n                </Button>\r\n            </InputGroup>\r\n            {this.rederBlockInfoDialog()}\r\n            <Table hover bordered striped responsive size=\"sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th>区块高度</th>\r\n                  <th>机器人</th>\r\n                  <th>金额</th>\r\n                  <th>手续费</th>\r\n                  <th>时间</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.renderBlockList()}\r\n                {this.rederAccountInfoDialog()}\r\n              </tbody>\r\n            </Table>\r\n            <nav>\r\n              <Pagination>\r\n                <PaginationItem><PaginationLink previous tag=\"button\" onClick={(e) => { this.prePage() }}>上一页</PaginationLink></PaginationItem>\r\n                <PaginationItem active>\r\n                  <PaginationLink tag=\"button\">{this.state.page}</PaginationLink>\r\n                </PaginationItem>\r\n                <PaginationItem><PaginationLink next tag=\"button\" onClick={(e) => { this.nextPage() }}>下一页</PaginationLink></PaginationItem>\r\n              </Pagination>\r\n            </nav>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>)\r\n  }\r\n\r\n  renderTransactionItem() {\r\n    let content = this.state.blockInfo.transactions.map((res) => {\r\n      return (<tr>\r\n        <td>{getTransactionName(res.type)}</td>\r\n        <td>{res.from}</td>\r\n        <td>{res.to}</td>\r\n        <td>{res.amount} 积分</td>\r\n        <td>{res.fee} 积分</td>\r\n        <td>{res.height}</td>\r\n      </tr>)\r\n    });\r\n\r\n    return content;\r\n  }\r\n\r\n  renderBlockTransactions() {\r\n    if (this.state.blockInfo.transactions) {\r\n      return (<Table hover bordered striped responsive size=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th>交易类型</th>\r\n            <th>发起账户</th>\r\n            <th>接收账户</th>\r\n            <th>金额</th>\r\n            <th>手续费</th>\r\n            <th>区块高度</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.renderTransactionItem()}\r\n        </tbody>\r\n      </Table>)\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        {this.renderList()}\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default BlockList;\r\n"],"sourceRoot":""}