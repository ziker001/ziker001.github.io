{"version":3,"sources":["views/ggv/js/share.js","views/ggv/ResourceShare/torrent-poster.js","views/ggv/ResourceShare/media-extensions.js","views/ggv/ResourceShare/ResourceShare.js"],"names":["WebTorrent","require","ShareManager","Object","E_working_dir_flycat_flycat_portal_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","client","tracker","rtcConfig","iceServers","urls","dht","torrentCallback","onStartCallback","uploadInput","up","document","querySelector","uploadElement","err","files","map","file","onFiles","bind","name","indexOf","isTorrentFile","torrent","on","warn","console","log","content","buf","Buffer","from","tor","seed","infoHash","_this","length","setTimeout","onSeedTorrent","forEach","elem","opts","cb","type","addEventListener","ev","reader","FileReader","index","results","read","readAsText","readAsDataURL","readAsArrayBuffer","e","push","target","module","exports","posterFile","filter","test","extractPoster","bestScore","mediaType","size","calculateDataLengthByExtension","mediaExtensions","sort","a","b","Error","msgNoSuitablePoster","imageFiles","filterOnExtension","image","bestCover","score","scoreAudioCoverFile","reduce","extname","path","getBuffer","torrentPosterFromAudio","getLargestFileByExtension","torrentPosterFromImage","video","getBlobURL","url","createElement","onSeeked","removeEventListener","options","arguments","undefined","nodeName","TypeError","format","canvas","width","videoWidth","height","videoHeight","getContext","drawImage","data","toDataURL","split","captureFrame","pause","src","load","onCanPlay","currentTime","Math","min","duration","volume","play","torrentPosterFromVideo","extensions","toLowerCase","imgFile","fileName","basename","relevanceScore","cover","folder","album","front","back","spectrogram","keyword","audio","Resumable","postSafe","shareResource","loadLocalAccount","signString","ResourceShare","props","E_working_dir_flycat_flycat_portal_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","E_working_dir_flycat_flycat_portal_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","E_working_dir_flycat_flycat_portal_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","collapse","resourceList","resource","tags","price","fee","deadline","owner","id","rsId","shareMsg","share","userSec","resName","resId","infoInterval","torrentList","resume","html5File","poster","setState","_this2","torrentFile","toString","req","time","Date","getTime","signature","host","getFileHost","nonce","res","initResumable","addFile","uploadAgain","_this3","pid","createPeerId","pk","accountId","aid","action","parameters","doBShopTransaction","ok","msg","ready","uploadTorrent","account","secret","init","onTorrentDone","onTorrentStart","_this4","chunkSize","simultaneousUploads","testChunks","throttleProgressCallbacks","method","upload","message","p","progress","num","exponent","neg","units","floor","Number","pow","toFixed","_this5","peersSpan","innerHTML","numPeers","speedSpan","prettyBytes","uploadSpeed","html5Files","magnetURI","torrentFileBlobURL","rlist","key","unshift","setInterval","updateTorrentStatus","value","calcAccountId","_this6","react__WEBPACK_IMPORTED_MODULE_6___default","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","xs","reactstrap__WEBPACK_IMPORTED_MODULE_18__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","className","onClick","toggle","reactstrap__WEBPACK_IMPORTED_MODULE_12__","color","data-target","toggleFade","reactstrap__WEBPACK_IMPORTED_MODULE_19__","isOpen","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_20__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","addonType","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","onChange","updateTags","placeholder","updatePrice","updateFee","renderDeadline","reactstrap__WEBPACK_IMPORTED_MODULE_17__","renderUploadAgainButton","disabled","doShare","cancelShare","_this7","sid","reactstrap__WEBPACK_IMPORTED_MODULE_21__","reactstrap__WEBPACK_IMPORTED_MODULE_22__","PopoverItem","reactstrap__WEBPACK_IMPORTED_MODULE_23__","sm","xl","reactstrap__WEBPACK_IMPORTED_MODULE_24__","renderResourceItems","renderAddFile","renderShareList","Component","_this8","E_working_dir_flycat_flycat_portal_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__","popoverOpen","reactstrap__WEBPACK_IMPORTED_MODULE_25__","placement","reactstrap__WEBPACK_IMPORTED_MODULE_26__","reactstrap__WEBPACK_IMPORTED_MODULE_27__","getCurrentHost"],"mappings":"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","file":"static/js/13.4137c343.chunk.js","sourcesContent":["const WebTorrent = require('flycat-torrent')\r\n\r\nclass ShareManager {\r\n\r\n    constructor() {\r\n        let rtcConfig = {\r\n            \"iceServers\": [\r\n                { \"urls\": \"stun:stun2.l.google.com:19302\" },\r\n                { \"urls\": \"stun:stun3.l.google.com:19302\" },\r\n                { \"urls\": \"stun:stun.btbresource.com:3478\" },\r\n                {\r\n                    \"urls\": \"stun:global.stun.twilio.com:3478?transport=udp\"\r\n                }\r\n            ]\r\n        };\r\n        this.client = new WebTorrent({\r\n            tracker: {\r\n                rtcConfig: rtcConfig\r\n            },\r\n            dht: false\r\n        })\r\n        this.torrentCallback = null\r\n        this.onStartCallback = null\r\n    }\r\n\r\n    init(torrentCallback, onStartCallback, uploadInput) {\r\n        this.torrentCallback = torrentCallback;\r\n        this.onStartCallback = onStartCallback;\r\n        var up = uploadInput;\r\n        if (!up)\r\n            up = document.querySelector('input[name=upload]')\r\n        if (up) {\r\n            this.uploadElement(up, this.onStartCallback, (function (err, files) {\r\n                if (err) return err;\r\n                files = files.map(function (file) { return file.file })\r\n                this.onFiles(files)\r\n            }).bind(this))\r\n        }\r\n    }\r\n\r\n    isTorrentFile(file) {\r\n        //var extname = path.extname(file.name).toLowerCase()\r\n        return file.name.indexOf('.torrent') !== -1;\r\n    }\r\n\r\n    isNotTorrentFile(file) {\r\n        return !this.isTorrentFile(file)\r\n    }\r\n\r\n    onSeedTorrent(torrent) {\r\n        torrent.on('warning', function (warn) {\r\n            console.log(warn);\r\n        })\r\n        torrent.on('error', function (err) {\r\n            console.log(err);\r\n        })\r\n        this.torrentCallback(torrent);\r\n    }\r\n\r\n    seedContent(content,torrentCallback) {\r\n        let buf = Buffer.from(content)\r\n        let tor = this.client.seed(buf, torrentCallback);\r\n        tor.on('infoHash', (infoHash) => {\r\n            torrentCallback(tor);\r\n        })\r\n    }\r\n\r\n    seed(files) {\r\n        if (files.length === 0) return\r\n        //console.log('Seeding ' + files.length + ' files')\r\n        this.onStartCallback(files)\r\n        // Seed from WebTorrent\r\n        setTimeout(() => {\r\n            let tor = this.client.seed(files, this.onSeedTorrent.bind(this));\r\n            tor.on('infoHash', (infoHash) => {\r\n                this.torrentCallback(tor);\r\n            })\r\n        }, 1000);\r\n    }\r\n    //\r\n    onFiles(files) {\r\n        console.log('got files:')\r\n        files.forEach(function (file) {\r\n            // console.log(' - %s (%s bytes)', file.name, file.size)\r\n        })\r\n\r\n        // .torrent file = start downloading the torrent\r\n        //files.filter(isTorrentFile).forEach(downloadTorrentFile)\r\n\r\n        // everything else = seed these files\r\n        this.seed(files)\r\n    }\r\n\r\n    uploadElement(elem, onStartCallback, opts, cb) {\r\n        if (typeof opts === 'function') {\r\n            cb = opts;\r\n            opts = {};\r\n        }\r\n        if (typeof opts === 'string') opts = { type: opts };\r\n\r\n        elem.addEventListener('change', function (ev) {\r\n            if (elem.files.length === 0) return cb(null, []);\r\n            if (onStartCallback)\r\n                onStartCallback(null)\r\n            var reader = new FileReader();\r\n            var index = 0;\r\n            var results = [];\r\n\r\n            reader.addEventListener('load', function (e) {\r\n                results.push({\r\n                    file: elem.files[index],\r\n                    target: e.target\r\n                });\r\n                index++;\r\n                if (index === elem.files.length) cb(null, results)\r\n                else read(index)\r\n            });\r\n            read(index);\r\n\r\n            function read(index) {\r\n                var file = elem.files[index];\r\n                if (opts.type === 'text') {\r\n                    reader.readAsText(file);\r\n                }\r\n                else if (opts.type === 'url') {\r\n                    reader.readAsDataURL(file);\r\n                }\r\n                else reader.readAsArrayBuffer(file);\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = ShareManager;","module.exports = torrentPoster\r\n\r\nconst path = require('path')\r\n\r\nconst mediaExtensions = require('./media-extensions')\r\n\r\nconst msgNoSuitablePoster = 'Cannot generate a poster from any files in the torrent'\r\n\r\nfunction captureFrame(video, options = {}) {\r\n  if (typeof video === 'string') {\r\n    video = document.querySelector(video)\r\n  }\r\n\r\n  if (video == null || video.nodeName !== 'VIDEO') {\r\n    throw new TypeError('First argument must be a <video> element or selector')\r\n  }\r\n  let format = options.format\r\n\r\n  if (format == null) {\r\n    format = 'png'\r\n  }\r\n\r\n  if (format !== 'png' && format !== 'jpeg' && format !== 'webp') {\r\n    throw new TypeError('Second argument must be one of \"png\", \"jpeg\", or \"webp\"')\r\n  }\r\n\r\n  const canvas = document.createElement('canvas')\r\n  //TODO create small poster\r\n  canvas.width = video.videoWidth\r\n  canvas.height = video.videoHeight\r\n\r\n  canvas.getContext('2d').drawImage(video, 0, 0)\r\n\r\n  const dataUri = canvas.toDataURL('image/' + format)\r\n  const data = dataUri.split(',')[1]\r\n\r\n  return Buffer.from(data, 'base64')\r\n}\r\n\r\n\r\n\r\nfunction torrentPoster(torrent, cb) {\r\n  // First, try to use a poster image if available\r\n  const posterFile = torrent.files.filter(function (file) {\r\n    return /^poster\\.(jpg|png|gif)$/.test(file.name)\r\n  })[0]\r\n  if (posterFile) return extractPoster(posterFile, cb)\r\n\r\n  // 'score' each media type based on total size present in torrent\r\n  const bestScore = ['audio', 'video', 'image'].map(mediaType => {\r\n    return {\r\n      type: mediaType,\r\n      size: calculateDataLengthByExtension(torrent, mediaExtensions[mediaType])\r\n    }\r\n  }).sort((a, b) => { // sort descending on size\r\n    return b.size - a.size\r\n  })[0]\r\n\r\n  if (bestScore.size === 0) {\r\n    // Admit defeat, no video, audio or image had a significant presence\r\n    return cb(new Error(msgNoSuitablePoster))\r\n  }\r\n\r\n  // Based on which media type is dominant we select the corresponding poster function\r\n  switch (bestScore.type) {\r\n    case 'audio':\r\n      return torrentPosterFromAudio(torrent, cb)\r\n    case 'image':\r\n      return torrentPosterFromImage(torrent, cb)\r\n    case 'video':\r\n      return torrentPosterFromVideo(torrent, cb)\r\n  }\r\n}\r\n\r\n/**\r\n * Calculate the total data size of file matching one of the provided extensions\r\n * @param torrent\r\n * @param extensions List of extension to match\r\n * @returns {number} total size, of matches found (>= 0)\r\n */\r\nfunction calculateDataLengthByExtension(torrent, extensions) {\r\n  const files = filterOnExtension(torrent, extensions)\r\n  if (files.length === 0) return 0\r\n  return files\r\n    .map(file => file.length)\r\n    .reduce((a, b) => {\r\n      return a + b\r\n    })\r\n}\r\n\r\n/**\r\n * Get the largest file of a given torrent, filtered by provided extension\r\n * @param torrent Torrent to search in\r\n * @param extensions Extension whitelist filter\r\n * @returns Torrent file object\r\n */\r\nfunction getLargestFileByExtension(torrent, extensions) {\r\n  const files = filterOnExtension(torrent, extensions)\r\n  if (files.length === 0) return undefined\r\n  return files.reduce((a, b) => {\r\n    return a.length > b.length ? a : b\r\n  })\r\n}\r\n\r\n/**\r\n * Filter file on a list extension, can be used to find al image files\r\n * @param torrent Torrent to filter files from\r\n * @param extensions File extensions to filter on\r\n * @returns {Array} Array of torrent file objects matching one of the given extensions\r\n */\r\nfunction filterOnExtension(torrent, extensions) {\r\n  return torrent.files.filter(file => {\r\n    const extname = path.extname(file.name).toLowerCase()\r\n    return extensions.indexOf(extname) !== -1\r\n  })\r\n}\r\n\r\n/**\r\n * Returns a score how likely the file is suitable as a poster\r\n * @param imgFile File object of an image\r\n * @returns {number} Score, higher score is a better match\r\n */\r\nfunction scoreAudioCoverFile(imgFile) {\r\n  const fileName = path.basename(imgFile.name, path.extname(imgFile.name)).toLowerCase()\r\n  const relevanceScore = {\r\n    cover: 80,\r\n    folder: 80,\r\n    album: 80,\r\n    front: 80,\r\n    back: 20,\r\n    spectrogram: -80\r\n  }\r\n\r\n  for (const keyword in relevanceScore) {\r\n    if (fileName === keyword) {\r\n      return relevanceScore[keyword]\r\n    }\r\n    if (fileName.indexOf(keyword) !== -1) {\r\n      return relevanceScore[keyword]\r\n    }\r\n  }\r\n  return 0\r\n}\r\n\r\nfunction torrentPosterFromAudio(torrent, cb) {\r\n  const imageFiles = filterOnExtension(torrent, mediaExtensions.image)\r\n\r\n  if (imageFiles.length === 0) return cb(new Error(msgNoSuitablePoster))\r\n\r\n  const bestCover = imageFiles.map(file => {\r\n    return {\r\n      file: file,\r\n      score: scoreAudioCoverFile(file)\r\n    }\r\n  }).reduce((a, b) => {\r\n    if (a.score > b.score) {\r\n      return a\r\n    }\r\n    if (b.score > a.score) {\r\n      return b\r\n    }\r\n    // If score is equal, pick the largest file, aiming for highest resolution\r\n    if (a.file.length > b.file.length) {\r\n      return a\r\n    }\r\n    return b\r\n  })\r\n\r\n  const extname = path.extname(bestCover.file.name)\r\n  bestCover.file.getBuffer((err, buf) => cb(err, buf, extname))\r\n}\r\n\r\nfunction torrentPosterFromVideo(torrent, cb) {\r\n  const file = getLargestFileByExtension(torrent, mediaExtensions.video)\r\n\r\n  file.getBlobURL(function (err, url) {\r\n    const video = document.createElement('video')\r\n    video.addEventListener('canplay', onCanPlay)\r\n\r\n    video.volume = 0\r\n    video.src = url\r\n    video.play()\r\n\r\n    function onCanPlay() {\r\n      video.removeEventListener('canplay', onCanPlay)\r\n      video.addEventListener('seeked', onSeeked)\r\n\r\n      video.currentTime = Math.min((video.duration || 600) * 0.03, 60)\r\n    }\r\n\r\n    function onSeeked() {\r\n      video.removeEventListener('seeked', onSeeked)\r\n      const buf = captureFrame(video)\r\n      // unload video element\r\n      video.pause()\r\n      video.src = ''\r\n      video.load()\r\n      if (buf.length === 0) return cb(new Error(msgNoSuitablePoster))\r\n      cb(null, buf, '.png')\r\n    }\r\n  })\r\n\r\n  //const index = torrent.files.indexOf(file)\r\n  //const server = torrent.createServer(0)\r\n\r\n\r\n  /*\r\n  server.listen(0, onListening)\r\n\r\n  function onListening () {\r\n    const port = server.address().port\r\n    const url = 'http://localhost:' + port + '/' + index\r\n    const video = document.createElement('video')\r\n    video.addEventListener('canplay', onCanPlay)\r\n\r\n    video.volume = 0\r\n    video.src = url\r\n    video.play()\r\n\r\n    function onCanPlay () {\r\n      video.removeEventListener('canplay', onCanPlay)\r\n      video.addEventListener('seeked', onSeeked)\r\n\r\n      video.currentTime = Math.min((video.duration || 600) * 0.03, 60)\r\n    }\r\n\r\n    function onSeeked () {\r\n      video.removeEventListener('seeked', onSeeked)\r\n\r\n      const buf = captureFrame(video)\r\n\r\n      // unload video element\r\n      video.pause()\r\n      video.src = ''\r\n      video.load()\r\n\r\n      server.destroy()\r\n\r\n      if (buf.length === 0) return cb(new Error(msgNoSuitablePoster))\r\n\r\n      cb(null, buf, '.jpg')\r\n    }\r\n  }\r\n  */\r\n}\r\n\r\nfunction torrentPosterFromImage(torrent, cb) {\r\n  const file = getLargestFileByExtension(torrent, mediaExtensions.image)\r\n  extractPoster(file, cb)\r\n}\r\n\r\nfunction extractPoster(file, cb) {\r\n  const extname = path.extname(file.name)\r\n  file.getBuffer((err, buf) => { return cb(err, buf, extname) })\r\n}\r\n","const mediaExtensions = {\r\n  audio: [\r\n    '.aac', '.aif', '.aiff', '.asf', '.dff', '.dsf', '.flac', '.m2a',\r\n    '.m4a', '.m4b', '.mp2', '.mp3', '.mpc', '.oga', '.ogg', '.opus',\r\n    '.spx', '.wma', '.wav', '.wv', '.wvp'],\r\n  video: [\r\n    '.avi', '.mp4', '.m4v', '.webm', '.mov', '.mkv', '.mpg', '.mpeg',\r\n    '.ogv', '.webm', '.wmv'],\r\n  image: ['.gif', '.jpg', '.jpeg', '.png']\r\n}\r\n\r\nmodule.exports = mediaExtensions\r\n","import React, { Component } from 'react';\r\nimport { Badge, Card, CardBody, CardHeader, Col, Pagination, PaginationItem, PaginationLink, Row, Table } from 'reactstrap';\r\nimport { Button, Input, InputGroup, InputGroupAddon, InputGroupText, Alert } from 'reactstrap';\r\nimport { CardGroup, Container, Form, FormGroup, Fade, Collapse, Label, ListGroup, ListGroupItem, ListGroupItemHeading, ListGroupItemText } from 'reactstrap'\r\nimport { Popover, PopoverBody, PopoverHeader } from 'reactstrap'\r\nimport { createPeerId, getFileHost, getCurrentHost, calcAccountId } from '../js/gegeUtil.js'\r\nimport { doBShopTransaction } from '../../eshop/eshop.js'\r\nconst Resumable = require('resumablejs')\r\nconst ShareManager = require('../js/share')\r\nconst get = require('simple-get')\r\nconst { shareResource, postSafe, loadLocalAccount, signString } = require('../js/gegeUtil')\r\nconst torrentPoster = require('./torrent-poster')\r\n\r\n\r\nclass ResourceShare extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    let res = { tags: '', price: '', fee: '', deadline: '', owner: '', id: '' }\r\n    this.state = { collapse: true, resourceList: [], resource: res, rsId: '' }\r\n    this.state.shareMsg = '';\r\n    this.share = new ShareManager(this.state);\r\n    this.userSec = ''\r\n    this.fee = 0.01;\r\n    this.deadline = 5;\r\n    this.price = 0;\r\n    this.tags = ''\r\n    this.resName = ''\r\n    this.resId = ''\r\n    this.infoInterval = null\r\n    this.torrentList = []\r\n    this.resume = null;\r\n    this.html5File = null;\r\n    this.torrent = null;\r\n    this.poster = null;\r\n  }\r\n\r\n\r\n\r\n  cancelShare() {\r\n    this.setState({ collapse: !this.state.collapse });\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({ collapse: !this.state.collapse });\r\n  }\r\n\r\n  uploadTorrent() {\r\n    //upload torrent to server\r\n    let torrent = this.torrent;\r\n    let torrentFile = torrent.torrentFile.toString('base64');\r\n    let infoHash = torrent.infoHash;\r\n    let poster = this.poster;\r\n    let name = this.torrent.files[0].name\r\n    this.setState({ shareMsg: '文件上传中...' })\r\n    console.log('upload torrentFile' + torrentFile);\r\n    //TODO upload poster\r\n    let req = { torrentFile, infoHash, poster, name };\r\n    let exp = 1000 * 60 * 60 * 24;\r\n    let time = new Date().getTime()\r\n    time = time - (time % exp);\r\n    let signature = signString(this.userSec, infoHash + time);\r\n    let host = getFileHost()\r\n    //host = 'http://127.0.0.1:18080'\r\n    let url = host + '/torrentFile/' + infoHash + '/' + signature\r\n    let config = { url, nonce: '0000' }\r\n    postSafe(config, req, (res) => {\r\n      if (res) {\r\n        this.initResumable(infoHash, signature)\r\n        this.resume.addFile(this.html5File);\r\n      }\r\n    })\r\n  }\r\n\r\n  uploadAgain() {\r\n    this.setState({ shareMsg: '资源上传中...', uploadAgain: false })\r\n    this.resume.addFile(this.html5File);\r\n  }\r\n\r\n  doShare() {\r\n    let deadline = this.deadline + '';\r\n    let fee = this.fee + '';\r\n    let resName = this.resName;\r\n    let price = this.price + ''\r\n    let pid = createPeerId(this.userSec);\r\n    let pk = pid.pk;\r\n    let accountId = pid.aid;\r\n    let tags = new Buffer(this.tags + '$$' + this.resName).toString('hex');\r\n    var data = { action: 'transaction', type: 'share', resId: this.resId, accountId, pk, fee, deadline, price, resName: tags };\r\n    let parameters = { tags }\r\n    doBShopTransaction(this.userSec, data, (ok, msg) => {\r\n      if (ok && msg && msg.ok) {\r\n        this.setState({ shareMsg: '资源校验成功，资源上传中,请稍后...', ready: false })\r\n        setTimeout(() => {\r\n          this.uploadTorrent()\r\n        }, 3000);\r\n      } else {\r\n        this.setState({ shareMsg: '发布资源出错了' })\r\n      }\r\n    }, parameters)\r\n  }\r\n  //   shareResource(this.resId, this.userSec, this.fee, this.deadline, this.price, this.tags, this.resName, (ok) => {\r\n  //     if (!ok) {\r\n  //       this.setState({ shareMsg: '发布资源出错了' })\r\n  //     } else {\r\n  //       this.setState({ shareMsg: '资源校验成功，资源上传中,请稍后...' })\r\n  //       this.uploadTorrent()\r\n  //     }\r\n  //   })\r\n  // }\r\n\r\n  componentDidMount() {\r\n    var account = loadLocalAccount();\r\n    if (account && account.secret) {\r\n      this.userSec = account.secret;\r\n      this.setState({ rsId: account.rsId })\r\n    }\r\n    this.share.init(this.onTorrentDone.bind(this), this.onTorrentStart.bind(this))\r\n  }\r\n\r\n  initResumable(infoHash, signature) {\r\n    let host = getFileHost()\r\n    // host = 'http://127.0.0.1:18080'\r\n    let target = host + '/share/' + infoHash + '/' + signature;\r\n    //console.log('target=' + target)\r\n    this.resume = new Resumable({\r\n      target,\r\n      chunkSize: 10 * 1024 * 1024,\r\n      simultaneousUploads: 4,\r\n      testChunks: false,\r\n      throttleProgressCallbacks: 1,\r\n      method: \"octet\"\r\n    });\r\n    //\r\n    this.resume.on('fileAdded', ((file) => {\r\n      console.log('resume got file ' + file)\r\n      if (this.resume)\r\n        this.resume.upload()\r\n      else {\r\n        console.log('this.resume is null')\r\n      }\r\n    }).bind(this))\r\n    this.resume.on('pause', function () {\r\n      console.log('resume pause')\r\n    });\r\n    this.resume.on('complete', () => {\r\n      console.log('resume complete')\r\n      if (!this.state.uploadAgain)\r\n        this.setState({ shareMsg: '文件上传成功' })\r\n    });\r\n    this.resume.on('fileSuccess', (file, message) => {\r\n      console.log('resume fileSuccess')\r\n    });\r\n    this.resume.on('fileError', (file, message) => {\r\n      console.log('resume fileError')\r\n      this.setState({ shareMsg: '发布资源出错了', uploadAgain: true })\r\n    });\r\n    this.resume.on('fileProgress', (file) => {\r\n      let p = file.progress() * 100;\r\n      this.setState({ shareMsg: '文件上传中 ' + p + '%' })\r\n    });\r\n    this.resume.on('cancel', function () {\r\n      console.log('resume cancel')\r\n    });\r\n    this.resume.on('uploadStart', function () {\r\n      console.log('resume uploadStart')\r\n    });\r\n  }\r\n\r\n  prettyBytes(num) {\r\n    var exponent, unit, neg = num < 0, units = ['B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\r\n    if (neg) num = -num\r\n    if (num < 1) return (neg ? '-' : '') + num + ' B'\r\n    exponent = Math.min(Math.floor(Math.log(num) / Math.log(1000)), units.length - 1)\r\n    num = Number((num / Math.pow(1000, exponent)).toFixed(2))\r\n    unit = units[exponent]\r\n    return (neg ? '-' : '') + num + ' ' + unit\r\n  }\r\n\r\n  updateTorrentStatus() {\r\n    //console.log('size ' + this.torrentList.length)\r\n    this.torrentList.map((torrent) => {\r\n      //uploadSpeed peers\r\n      let peersSpan = document.querySelector('#pid' + torrent.infoHash);\r\n      if (peersSpan)\r\n        peersSpan.innerHTML = torrent.numPeers;\r\n      let speedSpan = document.querySelector('#sid' + torrent.infoHash);\r\n      if (speedSpan)\r\n        speedSpan.innerHTML = this.prettyBytes(torrent.uploadSpeed) + '/s';\r\n    })\r\n  }\r\n\r\n\r\n  onTorrentStart(html5Files) {\r\n    this.setState({ shareMsg: '处理中...(大文件可能会比较慢,请耐心等待)' })\r\n    if (html5Files) {\r\n      this.html5File = html5Files[0];\r\n    }\r\n  }\r\n\r\n  onTorrentDone(torrent) {\r\n    this.setState({ ready: true })\r\n    if (torrent) {\r\n      this.torrent = torrent;\r\n      var info = 'Torrent info hash: ' + torrent.infoHash +\r\n        'magnetURI=' + torrent.magnetURI +\r\n        ' torrentFileBlobURL=\"' + torrent.torrentFileBlobURL + 'name=' + torrent.name;\r\n      //console.log(info);\r\n      this.resId = torrent.infoHash\r\n      this.resName = torrent.name;\r\n      var rlist = this.state.resourceList;\r\n      rlist.push({ id: this.resId, name: this.resName })\r\n      this.setState({ resourceList: rlist })\r\n      torrent.key = torrent.infoHash;\r\n      //tags is not set yet\r\n      //torrent.tags = this.tags;\r\n      this.torrentList.unshift(torrent)\r\n      // torrentPoster(torrent, (err, buf, extension) => {\r\n      //   if (err) {\r\n      //     console.log(err)\r\n      //   } else {\r\n      //     // console.log('torrentPoster ' + err + ' ' + buf.toString('base64') + ' ext=' + extension)\r\n      //     this.poster = buf.toString('base64')\r\n      //   }\r\n      // })\r\n    }\r\n    if (!this.infoInterval) {\r\n      this.infoInterval = setInterval(this.updateTorrentStatus.bind(this), 3000);\r\n    }\r\n    this.setState({ shareMsg: '' })\r\n  }\r\n\r\n  updateSecret(e) {\r\n    if (e && e.target) {\r\n      this.userSec = e.target.value;\r\n      let rsId = calcAccountId(this.userSec);\r\n      this.setState({ rsId: rsId })\r\n    }\r\n  }\r\n\r\n  updateFee(e) {\r\n    if (e && e.target) {\r\n      this.fee = e.target.value;\r\n    }\r\n  }\r\n\r\n  updatePrice(e) {\r\n    if (e && e.target) {\r\n      this.price = e.target.value;\r\n    }\r\n  }\r\n\r\n  updateTags(e) {\r\n    if (e && e.target) {\r\n      this.tags = e.target.value;\r\n    }\r\n  }\r\n\r\n  updateDeadline(e) {\r\n    if (e && e.target) {\r\n      this.deadline = e.target.value;\r\n    }\r\n  }\r\n\r\n  renderAddFile() {\r\n    return (<Row>\r\n      <Col xs=\"12\">\r\n        <Fade>\r\n          <Card>\r\n            <CardHeader>\r\n              <i className=\"icon-share\" onClick={this.toggle.bind(this)}>共享资源赚积分</i>\r\n              <div className=\"card-header-actions\">\r\n                <Button color=\"link\" className=\"card-header-action btn-setting\"><i className=\"icon-settings\"></i></Button>\r\n                <Button color=\"link\" className=\"card-header-action btn-minimize\" data-target=\"#collapseExample\" onClick={this.toggle.bind(this)}><i className=\"icon-arrow-up\"></i></Button>\r\n                <Button color=\"link\" className=\"card-header-action btn-close\" onClick={this.toggleFade}><i className=\"icon-close\"></i></Button>\r\n              </div>\r\n            </CardHeader>\r\n            <Collapse isOpen={this.state.collapse} id=\"collapseExample\">\r\n              <CardBody>\r\n                {/* <FormGroup>\r\n                  <Label htmlFor=\"appendedInputButtons\">账户密码:</Label>\r\n                  <div className=\"controls\">\r\n                    <InputGroup>\r\n                      <Input id=\"appendedInputButtons\" size=\"16\" type=\"text\" value={this.secret} onChange={this.updateSecret.bind(this)} placeholder='输入账户密码共享资源' />\r\n                    </InputGroup>\r\n                  </div>\r\n                </FormGroup> */}\r\n                <FormGroup>\r\n                  <div className=\"controls\">\r\n                    <InputGroup className=\"input-prepend\">\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        <InputGroupText>我的账号:</InputGroupText>\r\n                      </InputGroupAddon>\r\n                      <Input id=\"prependedInput\" size=\"16\" type=\"text\" value={this.state.rsId} />\r\n                    </InputGroup>\r\n                  </div>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <div className=\"controls\">\r\n                    <InputGroup className=\"input-prepend\">\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        <InputGroupText>资源:</InputGroupText>\r\n                      </InputGroupAddon>\r\n                      <input name=\"upload\" type=\"file\"></input>\r\n                    </InputGroup>\r\n                  </div>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <div className=\"controls\">\r\n                    <InputGroup className=\"input-prepend\">\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        <InputGroupText>资源ID:</InputGroupText>\r\n                      </InputGroupAddon>\r\n                      <Input id=\"prependedInput1\" size=\"16\" type=\"text\" value={this.resId} />\r\n                    </InputGroup>\r\n                  </div>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <div className=\"controls\">\r\n                    <InputGroup className=\"input-prepend\">\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        <InputGroupText>资源标签:</InputGroupText>\r\n                      </InputGroupAddon>\r\n                      <Input id=\"prependedInput2\" size=\"16\" type=\"text\" onChange={this.updateTags.bind(this)} placeholder='资源描述' />\r\n                    </InputGroup>\r\n                  </div>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <div className=\"controls\">\r\n                    <InputGroup className=\"input-prepend\">\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        <InputGroupText>价格:</InputGroupText>\r\n                      </InputGroupAddon>\r\n                      <Input id=\"appendedPrependedInput3\" size=\"16\" type=\"text\" onChange={this.updatePrice.bind(this)} placeholder=' 资源价格,默认0积分' />\r\n                      <InputGroupAddon addonType=\"append\">\r\n                        <InputGroupText>积分</InputGroupText>\r\n                      </InputGroupAddon>\r\n                    </InputGroup>\r\n                  </div>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <div className=\"controls\">\r\n                    <InputGroup className=\"input-prepend\">\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        <InputGroupText>机器人费:</InputGroupText>\r\n                      </InputGroupAddon>\r\n                      <Input id=\"appendedPrependedInput\" size=\"16\" type=\"text\" onChange={this.updateFee.bind(this)} placeholder='机器人手续费，最少0.01个积分' />\r\n                      <InputGroupAddon addonType=\"append\">\r\n                        <InputGroupText>积分</InputGroupText>\r\n                      </InputGroupAddon>\r\n                    </InputGroup>\r\n                  </div>\r\n                </FormGroup>\r\n                {\r\n                  this.renderDeadline()\r\n                }\r\n                <div>\r\n                  <Alert color=\"info\">{this.state.shareMsg}</Alert>\r\n                  {\r\n                    this.renderUploadAgainButton()\r\n                  }\r\n                </div>\r\n                <div className=\"form-actions\">\r\n                  <Button type=\"submit\" color=\"primary\" disabled={!this.state.ready} onClick={(e) => {\r\n                    this.setState({ shareMsg: '文件处理中...', })\r\n                    setTimeout(() => {\r\n                      this.doShare()\r\n                    }, 1000);\r\n                  }}>分享</Button>\r\n                  <Button color=\"secondary\" onClick={(e) => this.cancelShare()}>取消</Button>\r\n                </div>\r\n              </CardBody>\r\n            </Collapse>\r\n          </Card>\r\n        </Fade>\r\n      </Col>\r\n    </Row >)\r\n  }\r\n\r\n  renderUploadAgainButton() {\r\n    if (!this.state.uploadAgain)\r\n      return null\r\n    return (\r\n      <Button type=\"submit\" color=\"primary\" onClick={(e) => this.uploadAgain()}>重新上传</Button>\r\n    )\r\n  }\r\n\r\n  renderDeadline() {\r\n    if (true)\r\n      return null;\r\n    return (<FormGroup>\r\n      <div className=\"controls\">\r\n        <InputGroup className=\"input-prepend\">\r\n          <InputGroupAddon addonType=\"prepend\">\r\n            <InputGroupText>有效期:</InputGroupText>\r\n          </InputGroupAddon>\r\n          <Input id=\"appendedPrependedInput\" size=\"16\" onChange={this.updateDeadline.bind(this)} type=\"text\" placeholder='交易有效期，默认5分钟' />\r\n          <InputGroupAddon addonType=\"append\">\r\n            <InputGroupText>分钟</InputGroupText>\r\n          </InputGroupAddon>\r\n        </InputGroup>\r\n      </div>\r\n    </FormGroup>)\r\n  }\r\n\r\n  renderResourceItems() {\r\n    let items = this.state.resourceList.map((res) => {\r\n      let pid = 'pid' + res.id;\r\n      let sid = 'sid' + res.id;\r\n      return (<ListGroupItem action>\r\n        <ListGroupItemHeading> {res.name}  <PopoverItem id={res.id} res={res} /></ListGroupItemHeading>\r\n        <ListGroupItemText>\r\n          <code> <span id={pid}></span>节点</code>. &#x2197;<code><span id={sid}></span>上传速度</code>\r\n        </ListGroupItemText>\r\n      </ListGroupItem>)\r\n    })\r\n    return items;\r\n  }\r\n\r\n  renderShareList() {\r\n    return (<Row>\r\n      <Col sm=\"12\" xl=\"6\">\r\n        <Card>\r\n          <CardHeader>\r\n            <i className=\"fa fa-align-justify\"></i><strong>我的资源列表</strong>\r\n            <Alert color=\"danger\"><small>请不要刷新或关闭此页面，保持此页面打开状态下，购买过资源的用户才可以下载本机资源</small></Alert>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <ListGroup>\r\n              {this.renderResourceItems()}\r\n            </ListGroup>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        {this.renderAddFile()}\r\n        {this.renderShareList()}\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nclass PopoverItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      popoverOpen: false\r\n    };\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      popoverOpen: !this.state.popoverOpen,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <span>\r\n        <span className='alert-primary  fade show' id={'Popover-' + this.props.id} onClick={this.toggle}>\r\n          (分享链接)\r\n          </span>\r\n        <Popover placement='top' isOpen={this.state.popoverOpen} target={'Popover-' + this.props.id} toggle={this.toggle}>\r\n          <PopoverHeader>分享这个资源的链接</PopoverHeader>\r\n          <PopoverBody>{getCurrentHost() + \"/#/btb#\" + this.props.res.id + '#' + this.props.res.name}</PopoverBody>\r\n        </Popover>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResourceShare;\r\n"],"sourceRoot":""}