{"version":3,"sources":["../node_modules/reactstrap/es/ButtonDropdown.js","views/eshop/MinerList/MinerList.js"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","prop_types__WEBPACK_IMPORTED_MODULE_2__","prop_types__WEBPACK_IMPORTED_MODULE_2___default","_Dropdown__WEBPACK_IMPORTED_MODULE_3__","propTypes","children","a","node","ButtonDropdown","props","createElement","Object","group","__webpack_exports__","MinerList","_this","E_working_dir_flycat_flycat_portal_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","E_working_dir_flycat_flycat_portal_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","E_working_dir_flycat_flycat_portal_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","page","loadAll","channel","setState","channelName","filterOptions","action","dialogMsg","react__WEBPACK_IMPORTED_MODULE_5___default","reactstrap__WEBPACK_IMPORTED_MODULE_15__","e","target","v","value","length","fee","act","deadline","_this2","list","map","res","d","Date","setTime","time","btime","toLocaleString","update","_conponents_AccountDialog_AccountDialog__WEBPACK_IMPORTED_MODULE_20__","rsId","id","amount","random","ip","getExchangeStatus","status","note","reactstrap__WEBPACK_IMPORTED_MODULE_12__","size","onClick","exchange","toggleActionDialog","bind","bshopCall","ok","data","serverPk","pk","userRandom","toDateString","nonce","getTime","key","shareEncrypt","getPublicKey","Buffer","toString","req","_this3","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","color","className","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","isOpen","dropdownOpen","toggle","reactstrap__WEBPACK_IMPORTED_MODULE_17__","caret","reactstrap__WEBPACK_IMPORTED_MODULE_18__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","placeholder","onChange","updateHost","updatePort","startForger","reactstrap__WEBPACK_IMPORTED_MODULE_8__","hover","bordered","striped","responsive","renderExchangelist","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","previous","tag","prePage","active","next","nextPage","Component"],"mappings":"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","file":"static/js/11.9f00626b.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nvar propTypes = {\n  children: PropTypes.node\n};\n\nvar ButtonDropdown = function ButtonDropdown(props) {\n  return React.createElement(Dropdown, _extends({\n    group: true\n  }, props));\n};\n\nButtonDropdown.propTypes = propTypes;\nexport default ButtonDropdown;","import React, { Component } from 'react';\r\nimport { Badge, Card, CardBody, CardHeader, Col, Pagination, PaginationItem, PaginationLink, Row, Table } from 'reactstrap';\r\nimport { Button, Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\r\nimport { CardGroup, Container, Form, FormGroup, Fade, Collapse, Label } from 'reactstrap'\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader, ButtonDropdown, DropdownItem, DropdownMenu, DropdownToggle } from 'reactstrap'\r\nimport { shareEncrypt, bshopCall, getExchangeStatus } from '../eshop'\r\nimport AccountDialog from '../../conponents/AccountDialog/AccountDialog'\r\nimport { getPublicKey } from '../../ggv/js/gegeUtil'\r\nclass MinerList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {}\r\n  }\r\n\r\n  prePage() {\r\n    this.state.page--\r\n    this.loadAll()\r\n  }\r\n\r\n  nextPage() {\r\n    this.state.page++\r\n    this.loadAll()\r\n  }\r\n\r\n  setFilter(channel) {\r\n    this.setState({ channel: channel, channelName: this.filterOptions[channel] })\r\n  }\r\n\r\n  toggleActionDialog() {\r\n    this.setState({ action: !this.state.action, dialogMsg: '' })\r\n  }\r\n\r\n\r\n  renderdialogMsg() {\r\n    if (this.state.dialogMsg) {\r\n      return (<Label>{this.state.dialogMsg}</Label>)\r\n    }\r\n    return null;\r\n  }\r\n\r\n  updateFee(e) {\r\n    if (e && e.target) {\r\n      let v = e.target.value;\r\n      if (v && v.length > 0)\r\n        this.fee = v;\r\n    }\r\n  }\r\n  updateDeadline(e) {\r\n    if (e && e.target) {\r\n      let act = e.target.value;\r\n      this.deadline = act;\r\n    }\r\n  }\r\n\r\n  renderExchangelist() {\r\n    let list = this.state.list;\r\n    if (!list)\r\n      return null;\r\n    let content = list.map((res) => {\r\n      let d = new Date();\r\n      d.setTime(res.time)\r\n      let btime = d.toLocaleString()\r\n      //\r\n      d.setTime(res.update)\r\n      let update = d.toLocaleString()\r\n      return (<tr>\r\n        <td><AccountDialog rsId={res.id} /></td>\r\n        <td>{res.amount} 积分</td>\r\n        <td>{res.random} 积分</td>\r\n        <td>{res.channel}</td>\r\n        <td>{res.ip}</td>\r\n        <td>{btime}</td>\r\n        <td>{update}</td>\r\n        <td>{getExchangeStatus(res.status)}</td>\r\n        <td>{res.note}</td>\r\n        <td><Button size='sm' onClick={((e) => {\r\n          this.setState({ exchange: res })\r\n          this.toggleActionDialog()\r\n        }).bind(this)}>操作</Button></td>\r\n      </tr>)\r\n    });\r\n\r\n    return content;\r\n  }\r\n\r\n  updateHost() {\r\n\r\n  }\r\n  updatePort() {\r\n\r\n  }\r\n\r\n  startForger() {\r\n    let userSecret = 'this is a user sec.';\r\n    let data = { action: 'getpk' }\r\n    bshopCall(data, ((ok, data) => {\r\n      if (ok && data) {\r\n        let serverPk = data.pk;\r\n        let userRandom = 'www.bsh0pping.cc' + new Date().toDateString();\r\n        let nonce = new Date().getTime()\r\n        let key = shareEncrypt(userRandom, serverPk, nonce, userSecret);\r\n        let pk = getPublicKey(userRandom);\r\n        pk = new Buffer(pk).toString('hex')\r\n        key = new Buffer(key,'base64').toString('hex')\r\n        let req = { action: 'forge', key, pk, nonce : nonce + '' };\r\n        bshopCall(req, (ok, data) => {\r\n\r\n        })\r\n      }\r\n    }).bind(this))\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardBody>\r\n          <Button color=\"primary\" onClick={(e) => this.loadAll()}>\r\n            <i className=\"fa fa-search\"></i>显示全部\r\n                </Button>\r\n          <InputGroup>\r\n            <ButtonDropdown isOpen={this.state.dropdownOpen} toggle={() => { this.toggle(); }}>\r\n              <DropdownToggle caret>\r\n                {this.state.channelName}\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n              </DropdownMenu>\r\n            </ButtonDropdown>\r\n            <Input placeholder='host' onChange={this.updateHost.bind(this)} />\r\n            <Input placeholder='port' onChange={this.updatePort.bind(this)} />\r\n            <Button color=\"primary\" onClick={(e) => this.startForger()}>\r\n              <i className=\"fa fa-search\"></i>&nbsp;\r\n                </Button>\r\n          </InputGroup>\r\n          <Table hover bordered striped responsive size=\"sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Amount(金额</th>\r\n                <th>随机金额(金额</th>\r\n                <th>Channel(渠道</th>\r\n                <th>Ip地址</th>\r\n                <th>Time(申请时间</th>\r\n                <th>Update(更新时间</th>\r\n                <th>最新状态</th>\r\n                <th>Note(备注</th>\r\n                <th>Action(操作</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.renderExchangelist()}\r\n            </tbody>\r\n          </Table>\r\n          <nav>\r\n            <Pagination>\r\n              <PaginationItem><PaginationLink previous tag=\"button\" onClick={(e) => { this.prePage() }}>Prev(上一页</PaginationLink></PaginationItem>\r\n              <PaginationItem active>\r\n                <PaginationLink tag=\"button\">{this.state.page}</PaginationLink>\r\n              </PaginationItem>\r\n              <PaginationItem><PaginationLink next tag=\"button\" onClick={(e) => { this.nextPage() }}>Next(下一页</PaginationLink></PaginationItem>\r\n            </Pagination>\r\n          </nav>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MinerList;\r\n"],"sourceRoot":""}